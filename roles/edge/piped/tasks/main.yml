---
- name: Ensuring config folder exists
  ansible.builtin.file:
    path: '{{ piped_config_folder }}'
    state: directory
    mode: 0755

- name: Ensuring data folder exists
  ansible.builtin.file:
    path: '{{ piped_data_folder }}'
    state: directory
    mode: 0755

- name: Creating Piped volume folders
  become: true
  block:
    - name: Creating database folder
      ansible.builtin.file:
        path: '{{ (piped_data_folder, "data") | path_join }}'
        state: directory
        mode: 0700
        owner: 100000070
        group: 100000070

    - name: Creating backend config file
      ansible.builtin.template:
        src: backend.properties
        dest: '{{ (piped_config_folder | mandatory, "backend.properties") | path_join }}'
        mode: 0400
        owner: 100001000
        group: 100001000
      register: piped_backend_config_template

    - name: Uploading nginx config files
      ansible.builtin.copy:
        src: '{{ item }}'
        dest: '{{ piped_config_folder | mandatory }}'
        mode: 0400
        directory_mode: 0500
        owner: 100001000
        group: 100001000
      with_ansible.builtin.list:
        - config
        - nginx.conf
        - ytproxy.conf
      register: piped_nginx_config_template

- name: Templating compose file
  ansible.builtin.template:
    src: compose.yml
    dest: '{{ (piped_config_folder | mandatory, "compose.yml") | path_join }}'
    mode: 0500

- name: Starting Piped
  community.docker.docker_compose_v2:
    project_src: '{{ piped_config_folder }}'
  register: piped_compose_started
  notify:
    - Add internal networks in firewalld

- name: Restarting backend
  community.docker.docker_compose_v2:
    project_src: '{{ piped_config_folder }}'
    state: restarted
    services:
      - backend
  when: piped_backend_config_template is changed and (piped_compose_started.actions | selectattr('id', 'contains', 'backend') | length) <= 0

- name: Restarting nginx
  community.docker.docker_compose_v2:
    project_src: '{{ piped_config_folder }}'
    state: restarted
    services:
      - nginx
  when: piped_nginx_config_template is changed and (piped_compose_started.actions | selectattr('id', 'contains', 'nginx') | length) <= 0

- name: Create DNS Records for piped{,api,proxy}.magisystem.xyz
  ansible.builtin.include_role:
    name: hetzner/dns
  vars:
    hetzner_dns_record_prefix: '{{ prefix }}'
  loop_control:
    loop_var: prefix
  with_list:
    - piped
    - pipedapi
    - pipedproxy
