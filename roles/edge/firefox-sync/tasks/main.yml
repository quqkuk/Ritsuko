---
- name: Ensuring data folder exists
  ansible.builtin.file:
    path: '{{ firefox_data_folder }}'
    state: directory
    mode: 0755

- name: Creating Firefox Sync volume folders
  become: true
  block:
    - name: Checking database folder exists
      ansible.builtin.stat:
        path: '{{ (firefox_data_folder, "data") | path_join }}'
      register: firefox_database_folder

    - name: Creating database folder
      ansible.builtin.file:
        path: '{{ (firefox_data_folder, "data") | path_join }}'
        state: directory
        mode: 0700
        owner: 101000
        group: 101000
      when: not (firefox_database_folder | community.general.json_query('stat.exists'))
    
    - name: Checking application folder exists
      ansible.builtin.stat:
        path: '{{ (firefox_data_folder, "state") | path_join }}'
      register: firefox_state_folder

    - name: Creating application folder
      ansible.builtin.file:
        path: '{{ (firefox_data_folder, "state") | path_join }}'
        state: directory
        mode: 0700
        owner: 101000
        group: 101000
      when: not (firefox_state_folder | community.general.json_query('stat.exists'))

- name: Ensuring Firefox Sync network exists
  community.docker.docker_network:
    name: ff-sync
    driver: bridge
    internal: true
    state: present

- name: Create Database container
  community.docker.docker_container:
    name: ff-sync-database
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart_policy: unless-stopped
    keep_volumes: false
    env:
      MARIADB_RANDOM_ROOT_PASSWORD: 'yes'
      MARIADB_DATABASE: ff-sync
      MARIADB_USER: ff-sync
      MARIADB_PASSWORD: '{{ firefox_database_password }}'
    mounts:
      - type: bind
        source: '{{ (firefox_data_folder, "data") | path_join }}'
        target: /var/lib/mysql
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
    networks:
      - name: ff-sync
        aliases:
          - database

- name: Ensuring Firefox Sync Outside network exists
  community.docker.docker_network:
    name: ff-sync-outside
    driver: bridge
    internal: false
    state: present

- name: Create Firefox Sync container
  community.docker.docker_container:
    name: ff-sync
    image: mozilla/syncserver
    keep_volumes: false
    restart_policy: unless-stopped
    env:
      SYNCSERVER_PUBLIC_URL: http://firefox.magisystem.xyz
      SYNCSERVER_SQLURI: 'mysql://ff-sync:{{ firefox_database_password }}@database/ff-sync'
      SYNCSERVER_FORCE_WSGI_ENVIRON: 'false'
      SYNCSERVER_BATCH_UPLOAD_ENABLED: 'true'
      #SYNCSERVER_DEBUG_ENABLED: 'true'
      SYNCSERVER_SECRET: '{{ firefox_secret }}'
    networks:
      - name: ff-sync
      - name: ff-sync-outside
      - name: '{{ reverse_proxy_network }}'
    mounts:
      - type: bind
        source: '{{ (firefox_data_folder, "state") | path_join }}'
        target: /data
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
    labels:
      traefik.enable: 'true'
      traefik.http.routers.firefox-sync.entryPoints: https
      traefik.http.routers.firefox-sync.rule: Host(`firefox.magisystem.xyz`)
      traefik.http.routers.firefox-sync.service: firefox-sync
      traefik.http.services.firefox-sync.loadbalancer.server.port: '5000'
