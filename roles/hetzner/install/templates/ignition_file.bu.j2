variant: fcos
version: 1.4.0
storage:
  disks:
    # TODO: The partition numbers could be dynamic, hopefully it stays the same
    - device: {{ ("/dev/", hetzner_install_installation_drive) | path_join }}
      partitions:
        - number: 5
          wipe_partition_entry: True
          should_exist: False
        # We use /var to host the container volumes subvolume
        - number: 4
          resize: True
          size_mib: 0
  files:
    - path: /etc/ssh/sshd_config.d/90-change-port.conf
      overwrite: true
      contents:
        inline: |
          # Changing the ssh port
          Port {{ hetzner_install_ansible_port }}
    - path: /etc/ssh/sshd_config.d/40-prohibit-root-login.conf
      overwrite: true
      contents:
        inline: |
          # Prohibiting login as root
          PermitRootLogin no
    - path: /etc/ssh/sshd_config.d/40-allow-tcp-forwarding.conf
      overwrite: true
      contents:
        inline: |
          # Allow TCP port forwarding
          AllowTcpForwarding yes
          # Disabling Remote forwarding
          PermitListen none
          # Enabling forwarding only to loopback
          PermitOpen localhost:*
          PermitOpen 127.0.0.1:*
          PermitOpen [::1]:*
    - path: /etc/ssh/sshd_config.d/40-disable-password-authentication.conf
      overwrite: true
      contents:
        inline: |
          # Disable Password and Challenge Authentication
          PasswordAuthentication no
          ChallengeResponseAuthentication no
    - path: /etc/sudoers.d/90-permit-user-nopasswd
      overwrite: true
      contents:
        inline: |
          # Permit passwordless sudo to {{ hetzner_install_ansible_user }}
          {{ hetzner_install_ansible_user }} ALL=(ALL:ALL) NOPASSWD: ALL
    - path: /etc/snapper/configs/container-volumes
      contents:
        inline: |
          # subvolume to snapshot
          SUBVOLUME="/var/container-volumes"
          
          # filesystem type
          FSTYPE="btrfs"
          
          # btrfs qgroup for space aware cleanup algorithms
          #QGROUP=""
          
          # fraction of the filesystems space the snapshots may use
          SPACE_LIMIT="0.5"
          
          # fraction of the filesystems space that should be free
          FREE_LIMIT="0.2"
          
          # users and groups allowed to work with config
          ALLOW_USERS=""
          ALLOW_GROUPS=""
          
          # sync users and groups from ALLOW_USERS and ALLOW_GROUPS to .snapshots
          # directory
          SYNC_ACL="no"
          
          # start comparing pre- and post-snapshot in background after creating
          # post-snapshot
          BACKGROUND_COMPARISON="yes"
          
          # run daily number cleanup
          NUMBER_CLEANUP="yes"
          
          # limit for number cleanup
          NUMBER_MIN_AGE="0"
          NUMBER_LIMIT="10"
          NUMBER_LIMIT_IMPORTANT="10"
          
          # create hourly snapshots
          TIMELINE_CREATE="yes"
          
          # cleanup hourly snapshots after some time
          TIMELINE_CLEANUP="yes"
          
          # limits for timeline cleanup
          TIMELINE_MIN_AGE="1800"
          TIMELINE_LIMIT_HOURLY="5"
          TIMELINE_LIMIT_DAILY="10"
          TIMELINE_LIMIT_WEEKLY="0"
          TIMELINE_LIMIT_MONTHLY="2"
          TIMELINE_LIMIT_YEARLY="0"
          
          # cleanup empty pre-post-pairs
          EMPTY_PRE_POST_CLEANUP="yes"
          
          # limits for empty pre-post-pair cleanup
          EMPTY_PRE_POST_MIN_AGE="0"
    - path: /etc/logrotate.conf
      append:
        - inline: |
            nocompress
systemd:
  units:
    - name: docker.service
      enabled: true
    - name: sshd.service
      enabled: true
#passwd:
#  users:
#    - name: {{ hetzner_install_ansible_user }}
#      ssh_authorized_keys:
#        - {{ lookup('ansible.builtin.file', ansible_ssh_private_key_file+'.pub') }}
#      groups: ['docker']
